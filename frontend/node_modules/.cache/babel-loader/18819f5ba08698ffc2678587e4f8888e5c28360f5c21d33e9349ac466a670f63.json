{"ast":null,"code":"var _jsxFileName = \"D:\\\\project1\\\\stitch_and_savour\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Mock users for demo (in real app, this would be API calls)\n  const mockUsers = [{\n    id: 1,\n    name: 'Sangita Thakur',\n    email: 'sangita.shreyas@gmail.com',\n    phone: '9970944685',\n    address: 'Sirul, Maharashtra, India',\n    role: 'admin',\n    password: 'admin123'\n  }];\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const savedUser = localStorage.getItem('stitch_savour_user');\n    if (savedUser) {\n      try {\n        const userData = JSON.parse(savedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error loading user from localStorage:', error);\n        localStorage.removeItem('stitch_savour_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Check hardcoded admin\n      const adminUser = mockUsers.find(u => u.email === email && u.password === password);\n      if (adminUser) {\n        const {\n          password: _,\n          ...userWithoutPassword\n        } = adminUser;\n        setUser(userWithoutPassword);\n        localStorage.setItem('stitch_savour_user', JSON.stringify(userWithoutPassword));\n        return true;\n      }\n\n      // Check localStorage users (registered users)\n      const registeredUsers = JSON.parse(localStorage.getItem('stitch_savour_registered_users') || '[]');\n      const foundUser = registeredUsers.find(u => u.email === email && u.password === password);\n      if (foundUser) {\n        const {\n          password: _,\n          ...userWithoutPassword\n        } = foundUser;\n        setUser(userWithoutPassword);\n        localStorage.setItem('stitch_savour_user', JSON.stringify(userWithoutPassword));\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const signup = async userData => {\n    try {\n      // Prevent admin signup\n      if (userData.email === 'sangita.shreyas@gmail.com') {\n        return false;\n      }\n\n      // Check if user already exists\n      const registeredUsers = JSON.parse(localStorage.getItem('stitch_savour_registered_users') || '[]');\n      const existingUser = registeredUsers.find(u => u.email === userData.email);\n      if (existingUser) {\n        return false;\n      }\n\n      // Create new user\n      const newUser = {\n        id: Date.now(),\n        ...userData,\n        role: 'user',\n        createdAt: new Date().toISOString()\n      };\n\n      // Save to registered users\n      registeredUsers.push(newUser);\n      localStorage.setItem('stitch_savour_registered_users', JSON.stringify(registeredUsers));\n\n      // Log in the user\n      const {\n        password: _,\n        ...userWithoutPassword\n      } = newUser;\n      setUser(userWithoutPassword);\n      localStorage.setItem('stitch_savour_user', JSON.stringify(userWithoutPassword));\n      return true;\n    } catch (error) {\n      console.error('Signup error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('stitch_savour_user');\n  };\n  const updateProfile = async updatedData => {\n    try {\n      const updatedUser = {\n        ...user,\n        ...updatedData\n      };\n      setUser(updatedUser);\n      localStorage.setItem('stitch_savour_user', JSON.stringify(updatedUser));\n\n      // Update in registered users if not admin\n      if (user.role !== 'admin') {\n        const registeredUsers = JSON.parse(localStorage.getItem('stitch_savour_registered_users') || '[]');\n        const userIndex = registeredUsers.findIndex(u => u.id === user.id);\n        if (userIndex > -1) {\n          registeredUsers[userIndex] = {\n            ...registeredUsers[userIndex],\n            ...updatedData\n          };\n          localStorage.setItem('stitch_savour_registered_users', JSON.stringify(registeredUsers));\n        }\n      }\n      return true;\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return false;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    signup,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","mockUsers","id","name","email","phone","address","role","password","savedUser","localStorage","getItem","userData","JSON","parse","error","console","removeItem","login","adminUser","find","u","_","userWithoutPassword","setItem","stringify","registeredUsers","foundUser","signup","existingUser","newUser","Date","now","createdAt","toISOString","push","logout","updateProfile","updatedData","updatedUser","userIndex","findIndex","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project1/stitch_and_savour/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Mock users for demo (in real app, this would be API calls)\n  const mockUsers = [\n    {\n      id: 1,\n      name: 'Sangita Thakur',\n      email: 'sangita.shreyas@gmail.com',\n      phone: '9970944685',\n      address: 'Sirul, Maharashtra, India',\n      role: 'admin',\n      password: 'admin123'\n    }\n  ];\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const savedUser = localStorage.getItem('stitch_savour_user');\n    if (savedUser) {\n      try {\n        const userData = JSON.parse(savedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error loading user from localStorage:', error);\n        localStorage.removeItem('stitch_savour_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      // Check hardcoded admin\n      const adminUser = mockUsers.find(u => u.email === email && u.password === password);\n      if (adminUser) {\n        const { password: _, ...userWithoutPassword } = adminUser;\n        setUser(userWithoutPassword);\n        localStorage.setItem('stitch_savour_user', JSON.stringify(userWithoutPassword));\n        return true;\n      }\n\n      // Check localStorage users (registered users)\n      const registeredUsers = JSON.parse(localStorage.getItem('stitch_savour_registered_users') || '[]');\n      const foundUser = registeredUsers.find(u => u.email === email && u.password === password);\n      \n      if (foundUser) {\n        const { password: _, ...userWithoutPassword } = foundUser;\n        setUser(userWithoutPassword);\n        localStorage.setItem('stitch_savour_user', JSON.stringify(userWithoutPassword));\n        return true;\n      }\n\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      // Prevent admin signup\n      if (userData.email === 'sangita.shreyas@gmail.com') {\n        return false;\n      }\n\n      // Check if user already exists\n      const registeredUsers = JSON.parse(localStorage.getItem('stitch_savour_registered_users') || '[]');\n      const existingUser = registeredUsers.find(u => u.email === userData.email);\n      \n      if (existingUser) {\n        return false;\n      }\n\n      // Create new user\n      const newUser = {\n        id: Date.now(),\n        ...userData,\n        role: 'user',\n        createdAt: new Date().toISOString()\n      };\n\n      // Save to registered users\n      registeredUsers.push(newUser);\n      localStorage.setItem('stitch_savour_registered_users', JSON.stringify(registeredUsers));\n\n      // Log in the user\n      const { password: _, ...userWithoutPassword } = newUser;\n      setUser(userWithoutPassword);\n      localStorage.setItem('stitch_savour_user', JSON.stringify(userWithoutPassword));\n\n      return true;\n    } catch (error) {\n      console.error('Signup error:', error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('stitch_savour_user');\n  };\n\n  const updateProfile = async (updatedData) => {\n    try {\n      const updatedUser = { ...user, ...updatedData };\n      setUser(updatedUser);\n      localStorage.setItem('stitch_savour_user', JSON.stringify(updatedUser));\n\n      // Update in registered users if not admin\n      if (user.role !== 'admin') {\n        const registeredUsers = JSON.parse(localStorage.getItem('stitch_savour_registered_users') || '[]');\n        const userIndex = registeredUsers.findIndex(u => u.id === user.id);\n        if (userIndex > -1) {\n          registeredUsers[userIndex] = { ...registeredUsers[userIndex], ...updatedData };\n          localStorage.setItem('stitch_savour_registered_users', JSON.stringify(registeredUsers));\n        }\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return false;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    signup,\n    logout,\n    updateProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}