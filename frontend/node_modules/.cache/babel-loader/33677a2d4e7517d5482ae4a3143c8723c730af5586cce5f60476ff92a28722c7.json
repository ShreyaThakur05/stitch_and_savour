{"ast":null,"code":"import axios from'axios';import{config}from'../config/config';const API_URL=config.API_URL;// Create axios instance with default config\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add token to requests if available\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Handle token expiration\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const authService={// Register new user\nregister:async userData=>{try{const response=await api.post('/auth/register',userData);return response.data;}catch(error){var _error$response2,_error$response2$data;throw new Error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed');}},// Login user\nlogin:async credentials=>{try{const response=await api.post('/auth/login',credentials);return response.data;}catch(error){var _error$response3,_error$response3$data;throw new Error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Login failed');}},// Get current user\ngetCurrentUser:async()=>{try{const response=await api.get('/auth/me');return response.data;}catch(error){var _error$response4,_error$response4$data;throw new Error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to get user data');}},// Update user profile\nupdateProfile:async userData=>{try{const response=await api.put('/auth/profile',userData);return response.data;}catch(error){var _error$response5,_error$response5$data;throw new Error(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Profile update failed');}},// Change password\nchangePassword:async passwordData=>{try{const response=await api.put('/auth/change-password',passwordData);return response.data;}catch(error){var _error$response6,_error$response6$data;throw new Error(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Password change failed');}},// Logout\nlogout:async()=>{try{await api.post('/auth/logout');localStorage.removeItem('token');}catch(error){// Even if logout fails on server, remove token locally\nlocalStorage.removeItem('token');}}};export default api;","map":{"version":3,"names":["axios","config","API_URL","api","create","baseURL","headers","interceptors","request","use","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","register","userData","post","data","_error$response2","_error$response2$data","Error","message","login","credentials","_error$response3","_error$response3$data","getCurrentUser","get","_error$response4","_error$response4$data","updateProfile","put","_error$response5","_error$response5$data","changePassword","passwordData","_error$response6","_error$response6$data","logout"],"sources":["d:/project1/stitch_and_savour/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\nimport { config } from '../config/config';\n\nconst API_URL = config.API_URL;\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authService = {\n  // Register new user\n  register: async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Registration failed');\n    }\n  },\n\n  // Login user\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Login failed');\n    }\n  },\n\n  // Get current user\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to get user data');\n    }\n  },\n\n  // Update user profile\n  updateProfile: async (userData) => {\n    try {\n      const response = await api.put('/auth/profile', userData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Profile update failed');\n    }\n  },\n\n  // Change password\n  changePassword: async (passwordData) => {\n    try {\n      const response = await api.put('/auth/change-password', passwordData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Password change failed');\n    }\n  },\n\n  // Logout\n  logout: async () => {\n    try {\n      await api.post('/auth/logout');\n      localStorage.removeItem('token');\n    } catch (error) {\n      // Even if logout fails on server, remove token locally\n      localStorage.removeItem('token');\n    }\n  }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}