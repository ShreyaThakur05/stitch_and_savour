{"ast":null,"code":"var _jsxFileName = \"D:\\\\project1\\\\stitch_and_savour\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const navigate = useNavigate();\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('stitch_savour_cart');\n    if (savedCart) {\n      try {\n        setCartItems(JSON.parse(savedCart));\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('stitch_savour_cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = (product, quantity = 1, customizations = {}, selectedWeight = '') => {\n    // Calculate final price including customizations and weight\n    let finalPrice = product.price;\n\n    // For food items, calculate price based on weight or quantity\n    if (product.category === 'food' && selectedWeight) {\n      if (product.quantityOptions) {\n        // Handle quantity-based pricing (like Gujiya)\n        const selectedOption = product.quantityOptions.find(option => option.quantity === selectedWeight);\n        if (selectedOption) {\n          finalPrice = selectedOption.price;\n        }\n      } else if (product.pricePerKg) {\n        // Handle weight-based pricing\n        let weightValue;\n        if (selectedWeight.includes('kg')) {\n          weightValue = parseFloat(selectedWeight.replace(/[^0-9.]/g, ''));\n        } else {\n          weightValue = parseFloat(selectedWeight.replace(/[^0-9.]/g, '')) / 1000; // Convert g to kg\n        }\n        finalPrice = Math.round(product.pricePerKg * weightValue);\n      }\n    }\n\n    // Add customization modifiers\n    if (product.customization) {\n      product.customization.forEach(option => {\n        const selectedValue = customizations[option.type];\n        if (selectedValue && option.priceModifier && typeof option.priceModifier === 'object') {\n          finalPrice += option.priceModifier[selectedValue] || 0;\n        }\n      });\n    }\n    setCartItems(prevItems => {\n      const existingItemIndex = prevItems.findIndex(item => (item.id === product.id || item._id === product._id) && JSON.stringify(item.customizations) === JSON.stringify(customizations) && item.selectedWeight === selectedWeight);\n      if (existingItemIndex > -1) {\n        // Update existing item\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += quantity;\n        return updatedItems;\n      } else {\n        // Add new item\n        return [...prevItems, {\n          ...product,\n          id: product.id || product._id,\n          quantity,\n          customizations,\n          selectedWeight,\n          finalPrice,\n          cartId: `${product.id || product._id}_${Date.now()}_${Math.random()}`\n        }];\n      }\n    });\n    return true;\n  };\n  const removeFromCart = cartId => {\n    setCartItems(prevItems => prevItems.filter(item => item.cartId !== cartId));\n  };\n  const updateQuantity = (cartId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(cartId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.cartId === cartId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n    localStorage.removeItem('stitch_savour_cart');\n  };\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => {\n      const itemPrice = item.finalPrice || item.price;\n      return total + itemPrice * item.quantity;\n    }, 0);\n  };\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const getDeliveryTime = () => {\n    if (cartItems.length === 0) return 0;\n    return Math.max(...cartItems.map(item => item.deliveryTime || 2));\n  };\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getTotalItems,\n    getDeliveryTime\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"OZMhDigxccWnfA9eVZ9CMrgQnFU=\", false, function () {\n  return [useNavigate];\n});\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cartItems","setCartItems","navigate","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","product","quantity","customizations","selectedWeight","finalPrice","price","category","quantityOptions","selectedOption","find","option","pricePerKg","weightValue","includes","parseFloat","replace","Math","round","customization","forEach","selectedValue","type","priceModifier","prevItems","existingItemIndex","findIndex","item","id","_id","updatedItems","cartId","Date","now","random","removeFromCart","filter","updateQuantity","newQuantity","map","clearCart","removeItem","getCartTotal","reduce","total","itemPrice","getTotalItems","getDeliveryTime","length","max","deliveryTime","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project1/stitch_and_savour/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst CartContext = createContext();\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const navigate = useNavigate();\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('stitch_savour_cart');\n    if (savedCart) {\n      try {\n        setCartItems(JSON.parse(savedCart));\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('stitch_savour_cart', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const addToCart = (product, quantity = 1, customizations = {}, selectedWeight = '') => {\n    // Calculate final price including customizations and weight\n    let finalPrice = product.price;\n    \n    // For food items, calculate price based on weight or quantity\n    if (product.category === 'food' && selectedWeight) {\n      if (product.quantityOptions) {\n        // Handle quantity-based pricing (like Gujiya)\n        const selectedOption = product.quantityOptions.find(option => \n          option.quantity === selectedWeight\n        );\n        if (selectedOption) {\n          finalPrice = selectedOption.price;\n        }\n      } else if (product.pricePerKg) {\n        // Handle weight-based pricing\n        let weightValue;\n        if (selectedWeight.includes('kg')) {\n          weightValue = parseFloat(selectedWeight.replace(/[^0-9.]/g, ''));\n        } else {\n          weightValue = parseFloat(selectedWeight.replace(/[^0-9.]/g, '')) / 1000; // Convert g to kg\n        }\n        finalPrice = Math.round(product.pricePerKg * weightValue);\n      }\n    }\n    \n    // Add customization modifiers\n    if (product.customization) {\n      product.customization.forEach(option => {\n        const selectedValue = customizations[option.type];\n        if (selectedValue && option.priceModifier && typeof option.priceModifier === 'object') {\n          finalPrice += option.priceModifier[selectedValue] || 0;\n        }\n      });\n    }\n\n    setCartItems(prevItems => {\n      const existingItemIndex = prevItems.findIndex(\n        item => (item.id === product.id || item._id === product._id) && \n        JSON.stringify(item.customizations) === JSON.stringify(customizations) &&\n        item.selectedWeight === selectedWeight\n      );\n\n      if (existingItemIndex > -1) {\n        // Update existing item\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += quantity;\n        return updatedItems;\n      } else {\n        // Add new item\n        return [...prevItems, {\n          ...product,\n          id: product.id || product._id,\n          quantity,\n          customizations,\n          selectedWeight,\n          finalPrice,\n          cartId: `${product.id || product._id}_${Date.now()}_${Math.random()}`\n        }];\n      }\n    });\n    return true;\n  };\n\n  const removeFromCart = (cartId) => {\n    setCartItems(prevItems => prevItems.filter(item => item.cartId !== cartId));\n  };\n\n  const updateQuantity = (cartId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(cartId);\n      return;\n    }\n\n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item.cartId === cartId ? { ...item, quantity: newQuantity } : item\n      )\n    );\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n    localStorage.removeItem('stitch_savour_cart');\n  };\n\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => {\n      const itemPrice = item.finalPrice || item.price;\n      return total + (itemPrice * item.quantity);\n    }, 0);\n  };\n\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const getDeliveryTime = () => {\n    if (cartItems.length === 0) return 0;\n    return Math.max(...cartItems.map(item => item.deliveryTime || 2));\n  };\n\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getTotalItems,\n    getDeliveryTime\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}