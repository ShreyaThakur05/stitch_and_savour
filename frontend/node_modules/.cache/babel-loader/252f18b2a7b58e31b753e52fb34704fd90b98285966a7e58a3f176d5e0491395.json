{"ast":null,"code":"import _objectSpread from\"D:/project1/stitch_and_savour/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';import{config}from'../config/config';const API_URL=config.API_URL;// Create axios instance\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>Promise.reject(error));export const orderService={// Create order - save to both backend and localStorage\ncreateOrder:async orderData=>{try{// Try to save to backend first\nconst response=await api.post('/orders',orderData);// Save to user-specific localStorage key\nconst userEmail=orderData.customerEmail||orderData.email;const userSpecificKey=\"userOrders_\".concat(userEmail);const existingOrders=JSON.parse(localStorage.getItem(userSpecificKey)||'[]');existingOrders.push(_objectSpread(_objectSpread({},orderData),{},{orderId:response.data.order._id,createdAt:response.data.order.createdAt,status:response.data.order.status}));localStorage.setItem(userSpecificKey,JSON.stringify(existingOrders));return response.data;}catch(error){// Fallback to localStorage if backend fails\nconsole.warn('Backend unavailable, saving order locally:',error.message);const orderId='local_'+Date.now();const localOrder=_objectSpread(_objectSpread({},orderData),{},{orderId,createdAt:new Date().toISOString(),status:'pending',isLocal:true});const userEmail=orderData.customerEmail||orderData.email;const userSpecificKey=\"userOrders_\".concat(userEmail);const existingOrders=JSON.parse(localStorage.getItem(userSpecificKey)||'[]');existingOrders.push(localOrder);localStorage.setItem(userSpecificKey,JSON.stringify(existingOrders));return{success:true,order:localOrder};}},// Get user orders - try backend first, fallback to localStorage\ngetUserOrders:async()=>{try{const response=await api.get('/orders/user');// Get user email from token or current user\nconst currentUser=JSON.parse(localStorage.getItem('stitch_savour_user')||'{}');const userSpecificKey=\"userOrders_\".concat(currentUser.email);const localOrders=JSON.parse(localStorage.getItem(userSpecificKey)||'[]');const allOrders=[...response.data.orders,...localOrders.filter(o=>o.isLocal)];return allOrders;}catch(error){console.warn('Backend unavailable, using local orders:',error.message);const currentUser=JSON.parse(localStorage.getItem('stitch_savour_user')||'{}');const userSpecificKey=\"userOrders_\".concat(currentUser.email);return JSON.parse(localStorage.getItem(userSpecificKey)||'[]');}},// Update order status\nupdateOrderStatus:async(orderId,status)=>{try{const response=await api.put(\"/orders/\".concat(orderId,\"/status\"),{status});// Update user-specific localStorage\nconst currentUser=JSON.parse(localStorage.getItem('stitch_savour_user')||'{}');const userSpecificKey=\"userOrders_\".concat(currentUser.email);const orders=JSON.parse(localStorage.getItem(userSpecificKey)||'[]');const orderIndex=orders.findIndex(o=>o.orderId===orderId);if(orderIndex>-1){orders[orderIndex].status=status;localStorage.setItem(userSpecificKey,JSON.stringify(orders));}return response.data;}catch(error){// Update only localStorage if backend fails\nconst currentUser=JSON.parse(localStorage.getItem('stitch_savour_user')||'{}');const userSpecificKey=\"userOrders_\".concat(currentUser.email);const orders=JSON.parse(localStorage.getItem(userSpecificKey)||'[]');const orderIndex=orders.findIndex(o=>o.orderId===orderId);if(orderIndex>-1){orders[orderIndex].status=status;localStorage.setItem(userSpecificKey,JSON.stringify(orders));}throw error;}}};export default orderService;","map":{"version":3,"names":["axios","config","API_URL","api","create","baseURL","headers","interceptors","request","use","token","localStorage","getItem","Authorization","concat","error","Promise","reject","orderService","createOrder","orderData","response","post","userEmail","customerEmail","email","userSpecificKey","existingOrders","JSON","parse","push","_objectSpread","orderId","data","order","_id","createdAt","status","setItem","stringify","console","warn","message","Date","now","localOrder","toISOString","isLocal","success","getUserOrders","get","currentUser","localOrders","allOrders","orders","filter","o","updateOrderStatus","put","orderIndex","findIndex"],"sources":["D:/project1/stitch_and_savour/frontend/src/services/orderService.js"],"sourcesContent":["import axios from 'axios';\n\nimport { config } from '../config/config';\n\nconst API_URL = config.API_URL;\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport const orderService = {\n  // Create order - save to both backend and localStorage\n  createOrder: async (orderData) => {\n    try {\n      // Try to save to backend first\n      const response = await api.post('/orders', orderData);\n      \n      // Save to user-specific localStorage key\n      const userEmail = orderData.customerEmail || orderData.email;\n      const userSpecificKey = `userOrders_${userEmail}`;\n      const existingOrders = JSON.parse(localStorage.getItem(userSpecificKey) || '[]');\n      existingOrders.push({\n        ...orderData,\n        orderId: response.data.order._id,\n        createdAt: response.data.order.createdAt,\n        status: response.data.order.status\n      });\n      localStorage.setItem(userSpecificKey, JSON.stringify(existingOrders));\n      \n      return response.data;\n    } catch (error) {\n      // Fallback to localStorage if backend fails\n      console.warn('Backend unavailable, saving order locally:', error.message);\n      const orderId = 'local_' + Date.now();\n      const localOrder = {\n        ...orderData,\n        orderId,\n        createdAt: new Date().toISOString(),\n        status: 'pending',\n        isLocal: true\n      };\n      \n      const userEmail = orderData.customerEmail || orderData.email;\n      const userSpecificKey = `userOrders_${userEmail}`;\n      const existingOrders = JSON.parse(localStorage.getItem(userSpecificKey) || '[]');\n      existingOrders.push(localOrder);\n      localStorage.setItem(userSpecificKey, JSON.stringify(existingOrders));\n      \n      return { success: true, order: localOrder };\n    }\n  },\n\n  // Get user orders - try backend first, fallback to localStorage\n  getUserOrders: async () => {\n    try {\n      const response = await api.get('/orders/user');\n      \n      // Get user email from token or current user\n      const currentUser = JSON.parse(localStorage.getItem('stitch_savour_user') || '{}');\n      const userSpecificKey = `userOrders_${currentUser.email}`;\n      const localOrders = JSON.parse(localStorage.getItem(userSpecificKey) || '[]');\n      const allOrders = [...response.data.orders, ...localOrders.filter(o => o.isLocal)];\n      \n      return allOrders;\n    } catch (error) {\n      console.warn('Backend unavailable, using local orders:', error.message);\n      const currentUser = JSON.parse(localStorage.getItem('stitch_savour_user') || '{}');\n      const userSpecificKey = `userOrders_${currentUser.email}`;\n      return JSON.parse(localStorage.getItem(userSpecificKey) || '[]');\n    }\n  },\n\n  // Update order status\n  updateOrderStatus: async (orderId, status) => {\n    try {\n      const response = await api.put(`/orders/${orderId}/status`, { status });\n      \n      // Update user-specific localStorage\n      const currentUser = JSON.parse(localStorage.getItem('stitch_savour_user') || '{}');\n      const userSpecificKey = `userOrders_${currentUser.email}`;\n      const orders = JSON.parse(localStorage.getItem(userSpecificKey) || '[]');\n      const orderIndex = orders.findIndex(o => o.orderId === orderId);\n      if (orderIndex > -1) {\n        orders[orderIndex].status = status;\n        localStorage.setItem(userSpecificKey, JSON.stringify(orders));\n      }\n      \n      return response.data;\n    } catch (error) {\n      // Update only localStorage if backend fails\n      const currentUser = JSON.parse(localStorage.getItem('stitch_savour_user') || '{}');\n      const userSpecificKey = `userOrders_${currentUser.email}`;\n      const orders = JSON.parse(localStorage.getItem(userSpecificKey) || '[]');\n      const orderIndex = orders.findIndex(o => o.orderId === orderId);\n      if (orderIndex > -1) {\n        orders[orderIndex].status = status;\n        localStorage.setItem(userSpecificKey, JSON.stringify(orders));\n      }\n      throw error;\n    }\n  }\n};\n\nexport default orderService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}