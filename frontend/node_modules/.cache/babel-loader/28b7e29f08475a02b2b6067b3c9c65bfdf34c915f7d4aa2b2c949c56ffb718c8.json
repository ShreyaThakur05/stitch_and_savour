{"ast":null,"code":"import _objectSpread from\"D:/project1/stitch_and_savour/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';import{config}from'../config/config';const API_URL=config.API_URL;// Create axios instance\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>Promise.reject(error));export const reviewService={// Create review - save to both backend and localStorage\ncreateReview:async reviewData=>{try{// Try to save to backend first\nconst response=await api.post('/reviews',{productId:reviewData.productId,rating:reviewData.rating,comment:reviewData.review||reviewData.comment,customerName:reviewData.customerName,customerEmail:reviewData.customerEmail,orderNumber:reviewData.orderNumber,productName:reviewData.productName});// If backend succeeds, also save to localStorage\nconst existingReviews=JSON.parse(localStorage.getItem('productReviews')||'[]');existingReviews.push(_objectSpread(_objectSpread({},reviewData),{},{id:response.data.review._id,createdAt:response.data.review.createdAt}));localStorage.setItem('productReviews',JSON.stringify(existingReviews));return response.data;}catch(error){// Fallback to localStorage if backend fails\nconsole.warn('Backend unavailable, saving review locally:',error.message);const localReview=_objectSpread(_objectSpread({},reviewData),{},{id:'local_'+Date.now(),createdAt:new Date().toISOString(),isLocal:true});const existingReviews=JSON.parse(localStorage.getItem('productReviews')||'[]');existingReviews.push(localReview);localStorage.setItem('productReviews',JSON.stringify(existingReviews));return{success:true,review:localReview};}},// Get reviews for a product - try backend first, fallback to localStorage\ngetProductReviews:async productId=>{try{const response=await api.get(\"/reviews/product/\".concat(productId));// Merge with local reviews\nconst localReviews=JSON.parse(localStorage.getItem('productReviews')||'[]').filter(r=>(r.productId===productId||r.product===productId)&&r.isLocal);return[...response.data.reviews,...localReviews];}catch(error){console.warn('Backend unavailable, using local reviews:',error.message);return JSON.parse(localStorage.getItem('productReviews')||'[]').filter(r=>r.productId===productId||r.product===productId);}},// Get all reviews - try backend first, fallback to localStorage\ngetAllReviews:async()=>{try{const response=await api.get('/reviews/all');// Merge with local reviews\nconst localReviews=JSON.parse(localStorage.getItem('productReviews')||'[]').filter(r=>r.isLocal);return[...response.data.reviews,...localReviews];}catch(error){console.warn('Backend unavailable, using local reviews:',error.message);return JSON.parse(localStorage.getItem('productReviews')||'[]');}}};export default reviewService;","map":{"version":3,"names":["axios","config","API_URL","api","create","baseURL","headers","interceptors","request","use","token","localStorage","getItem","Authorization","concat","error","Promise","reject","reviewService","createReview","reviewData","response","post","productId","rating","comment","review","customerName","customerEmail","orderNumber","productName","existingReviews","JSON","parse","push","_objectSpread","id","data","_id","createdAt","setItem","stringify","console","warn","message","localReview","Date","now","toISOString","isLocal","success","getProductReviews","get","localReviews","filter","r","product","reviews","getAllReviews"],"sources":["D:/project1/stitch_and_savour/frontend/src/services/reviewService.js"],"sourcesContent":["import axios from 'axios';\n\nimport { config } from '../config/config';\n\nconst API_URL = config.API_URL;\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport const reviewService = {\n  // Create review - save to both backend and localStorage\n  createReview: async (reviewData) => {\n    try {\n      // Try to save to backend first\n      const response = await api.post('/reviews', {\n        productId: reviewData.productId,\n        rating: reviewData.rating,\n        comment: reviewData.review || reviewData.comment,\n        customerName: reviewData.customerName,\n        customerEmail: reviewData.customerEmail,\n        orderNumber: reviewData.orderNumber,\n        productName: reviewData.productName\n      });\n      \n      // If backend succeeds, also save to localStorage\n      const existingReviews = JSON.parse(localStorage.getItem('productReviews') || '[]');\n      existingReviews.push({\n        ...reviewData,\n        id: response.data.review._id,\n        createdAt: response.data.review.createdAt\n      });\n      localStorage.setItem('productReviews', JSON.stringify(existingReviews));\n      \n      return response.data;\n    } catch (error) {\n      // Fallback to localStorage if backend fails\n      console.warn('Backend unavailable, saving review locally:', error.message);\n      const localReview = {\n        ...reviewData,\n        id: 'local_' + Date.now(),\n        createdAt: new Date().toISOString(),\n        isLocal: true\n      };\n      \n      const existingReviews = JSON.parse(localStorage.getItem('productReviews') || '[]');\n      existingReviews.push(localReview);\n      localStorage.setItem('productReviews', JSON.stringify(existingReviews));\n      \n      return { success: true, review: localReview };\n    }\n  },\n\n  // Get reviews for a product - try backend first, fallback to localStorage\n  getProductReviews: async (productId) => {\n    try {\n      const response = await api.get(`/reviews/product/${productId}`);\n      \n      // Merge with local reviews\n      const localReviews = JSON.parse(localStorage.getItem('productReviews') || '[]')\n        .filter(r => (r.productId === productId || r.product === productId) && r.isLocal);\n      \n      return [...response.data.reviews, ...localReviews];\n    } catch (error) {\n      console.warn('Backend unavailable, using local reviews:', error.message);\n      return JSON.parse(localStorage.getItem('productReviews') || '[]')\n        .filter(r => r.productId === productId || r.product === productId);\n    }\n  },\n\n  // Get all reviews - try backend first, fallback to localStorage\n  getAllReviews: async () => {\n    try {\n      const response = await api.get('/reviews/all');\n      \n      // Merge with local reviews\n      const localReviews = JSON.parse(localStorage.getItem('productReviews') || '[]')\n        .filter(r => r.isLocal);\n      \n      return [...response.data.reviews, ...localReviews];\n    } catch (error) {\n      console.warn('Backend unavailable, using local reviews:', error.message);\n      return JSON.parse(localStorage.getItem('productReviews') || '[]');\n    }\n  }\n};\n\nexport default reviewService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}