{"ast":null,"code":"import _objectSpread from\"d:/project1/stitch_and_savour/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';import{config}from'../config/config';const API_URL=config.API_URL;const api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>Promise.reject(error));export const userService={// Update user profile - save to both backend and localStorage\nupdateProfile:async userData=>{try{// Try to save to backend first\nconst response=await api.put('/users/profile',userData);// Update localStorage\nconst currentUser=JSON.parse(localStorage.getItem('stitch_savour_user')||'{}');const updatedUser=_objectSpread(_objectSpread({},currentUser),userData);localStorage.setItem('stitch_savour_user',JSON.stringify(updatedUser));return response.data;}catch(error){// Fallback to localStorage only\nconsole.warn('Backend unavailable, updating localStorage only:',error.message);const currentUser=JSON.parse(localStorage.getItem('stitch_savour_user')||'{}');const updatedUser=_objectSpread(_objectSpread(_objectSpread({},currentUser),userData),{},{isLocal:true});localStorage.setItem('stitch_savour_user',JSON.stringify(updatedUser));return{success:true,user:updatedUser};}},// Get user profile\ngetProfile:async()=>{try{const response=await api.get('/users/profile');// Update localStorage with latest data\nlocalStorage.setItem('stitch_savour_user',JSON.stringify(response.data.user));return response.data;}catch(error){console.warn('Backend unavailable, using localStorage:',error.message);const localUser=JSON.parse(localStorage.getItem('stitch_savour_user')||'{}');return{user:localUser};}},// Change password\nchangePassword:async passwordData=>{try{const response=await api.put('/users/change-password',passwordData);return response.data;}catch(error){var _error$response,_error$response$data;throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to change password');}}};export default userService;","map":{"version":3,"names":["axios","config","API_URL","api","create","baseURL","headers","interceptors","request","use","token","localStorage","getItem","Authorization","concat","error","Promise","reject","userService","updateProfile","userData","response","put","currentUser","JSON","parse","updatedUser","_objectSpread","setItem","stringify","data","console","warn","message","isLocal","success","user","getProfile","get","localUser","changePassword","passwordData","_error$response","_error$response$data","Error"],"sources":["d:/project1/stitch_and_savour/frontend/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\n\nimport { config } from '../config/config';\n\nconst API_URL = config.API_URL;\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport const userService = {\n  // Update user profile - save to both backend and localStorage\n  updateProfile: async (userData) => {\n    try {\n      // Try to save to backend first\n      const response = await api.put('/users/profile', userData);\n      \n      // Update localStorage\n      const currentUser = JSON.parse(localStorage.getItem('stitch_savour_user') || '{}');\n      const updatedUser = { ...currentUser, ...userData };\n      localStorage.setItem('stitch_savour_user', JSON.stringify(updatedUser));\n      \n      return response.data;\n    } catch (error) {\n      // Fallback to localStorage only\n      console.warn('Backend unavailable, updating localStorage only:', error.message);\n      const currentUser = JSON.parse(localStorage.getItem('stitch_savour_user') || '{}');\n      const updatedUser = { ...currentUser, ...userData, isLocal: true };\n      localStorage.setItem('stitch_savour_user', JSON.stringify(updatedUser));\n      \n      return { success: true, user: updatedUser };\n    }\n  },\n\n  // Get user profile\n  getProfile: async () => {\n    try {\n      const response = await api.get('/users/profile');\n      \n      // Update localStorage with latest data\n      localStorage.setItem('stitch_savour_user', JSON.stringify(response.data.user));\n      \n      return response.data;\n    } catch (error) {\n      console.warn('Backend unavailable, using localStorage:', error.message);\n      const localUser = JSON.parse(localStorage.getItem('stitch_savour_user') || '{}');\n      return { user: localUser };\n    }\n  },\n\n  // Change password\n  changePassword: async (passwordData) => {\n    try {\n      const response = await api.put('/users/change-password', passwordData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to change password');\n    }\n  }\n};\n\nexport default userService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}