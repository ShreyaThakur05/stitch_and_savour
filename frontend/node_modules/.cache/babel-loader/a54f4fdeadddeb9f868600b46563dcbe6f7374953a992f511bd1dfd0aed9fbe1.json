{"ast":null,"code":"// Excel export utility\nexport const exportToExcel = (data, filename = 'export.csv') => {\n  const csvContent = data.map(row => Object.values(row).map(value => typeof value === 'string' && value.includes(',') ? `\"${value}\"` : value).join(',')).join('\\n');\n  const headers = Object.keys(data[0] || {}).join(',');\n  const fullContent = headers + '\\n' + csvContent;\n  const blob = new Blob([fullContent], {\n    type: 'text/csv;charset=utf-8;'\n  });\n  const link = document.createElement('a');\n  const url = URL.createObjectURL(blob);\n  link.setAttribute('href', url);\n  link.setAttribute('download', filename);\n  link.style.visibility = 'hidden';\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\nexport const exportOrdersToExcel = orders => {\n  const exportData = orders.map(order => {\n    var _order$items, _order$items2, _order$items2$;\n    return {\n      'Order ID': order.orderNumber,\n      'Customer Name': order.customerName,\n      'Email': order.customerEmail || 'N/A',\n      'Phone': order.phone || 'N/A',\n      'Total Amount': order.total,\n      'Payment Method': order.paymentMethod === 'qr' ? 'Online' : 'COD',\n      'Payment Status': order.paymentMethod === 'qr' ? 'Paid' : 'Pending',\n      'Order Status': order.status,\n      'Order Date': new Date(order.createdAt).toLocaleDateString(),\n      'Delivery Deadline': new Date(order.estimatedDelivery).toLocaleDateString(),\n      'Items': ((_order$items = order.items) === null || _order$items === void 0 ? void 0 : _order$items.map(item => `${item.name} (${item.quantity})`).join('; ')) || 'N/A',\n      'Category': ((_order$items2 = order.items) === null || _order$items2 === void 0 ? void 0 : (_order$items2$ = _order$items2[0]) === null || _order$items2$ === void 0 ? void 0 : _order$items2$.category) || 'Mixed'\n    };\n  });\n  exportToExcel(exportData, `orders_${new Date().toISOString().split('T')[0]}.csv`);\n};","map":{"version":3,"names":["exportToExcel","data","filename","csvContent","map","row","Object","values","value","includes","join","headers","keys","fullContent","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportOrdersToExcel","orders","exportData","order","_order$items","_order$items2","_order$items2$","orderNumber","customerName","customerEmail","phone","total","paymentMethod","status","Date","createdAt","toLocaleDateString","estimatedDelivery","items","item","name","quantity","category","toISOString","split"],"sources":["d:/project1/stitch_and_savour/frontend/src/utils/excelExport.js"],"sourcesContent":["// Excel export utility\nexport const exportToExcel = (data, filename = 'export.csv') => {\n  const csvContent = data.map(row => \n    Object.values(row).map(value => \n      typeof value === 'string' && value.includes(',') ? `\"${value}\"` : value\n    ).join(',')\n  ).join('\\n');\n  \n  const headers = Object.keys(data[0] || {}).join(',');\n  const fullContent = headers + '\\n' + csvContent;\n  \n  const blob = new Blob([fullContent], { type: 'text/csv;charset=utf-8;' });\n  const link = document.createElement('a');\n  const url = URL.createObjectURL(blob);\n  link.setAttribute('href', url);\n  link.setAttribute('download', filename);\n  link.style.visibility = 'hidden';\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n\nexport const exportOrdersToExcel = (orders) => {\n  const exportData = orders.map(order => ({\n    'Order ID': order.orderNumber,\n    'Customer Name': order.customerName,\n    'Email': order.customerEmail || 'N/A',\n    'Phone': order.phone || 'N/A',\n    'Total Amount': order.total,\n    'Payment Method': order.paymentMethod === 'qr' ? 'Online' : 'COD',\n    'Payment Status': order.paymentMethod === 'qr' ? 'Paid' : 'Pending',\n    'Order Status': order.status,\n    'Order Date': new Date(order.createdAt).toLocaleDateString(),\n    'Delivery Deadline': new Date(order.estimatedDelivery).toLocaleDateString(),\n    'Items': order.items?.map(item => `${item.name} (${item.quantity})`).join('; ') || 'N/A',\n    'Category': order.items?.[0]?.category || 'Mixed'\n  }));\n  \n  exportToExcel(exportData, `orders_${new Date().toISOString().split('T')[0]}.csv`);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}