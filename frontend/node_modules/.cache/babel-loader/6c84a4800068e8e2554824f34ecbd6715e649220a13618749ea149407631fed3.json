{"ast":null,"code":"import emailjs from '@emailjs/browser';\n\n// EmailJS configuration - UPDATE WITH YOUR ACTUAL TEMPLATE ID\nconst EMAILJS_CONFIG = {\n  serviceId: 'service_stitch_savour',\n  templateId: 'template_order_confirmat',\n  publicKey: 'keGAumAlGmoQXtY1v'\n};\nconst emailService = {\n  // Send order confirmation email\n  sendOrderConfirmation: async (orderData, customerData) => {\n    try {\n      var _orderData$deliveryAd, _orderData$deliveryAd2, _orderData$deliveryAd3, _orderData$deliveryAd4;\n      const templateParams = {\n        to_email: customerData.email,\n        from_name: 'Stitch & Savour',\n        from_email: 'shreyathakurinda@gmail.com',\n        customer_name: customerData.name,\n        order_id: orderData.orderId,\n        total_amount: orderData.total,\n        payment_method: orderData.paymentMethod === 'qr' ? 'Online Payment' : 'Cash on Delivery',\n        delivery_option: orderData.deliveryOption === 'home' ? 'Home Delivery' : 'Self Pickup',\n        delivery_address: orderData.deliveryOption === 'home' ? `${(_orderData$deliveryAd = orderData.deliveryAddress) === null || _orderData$deliveryAd === void 0 ? void 0 : _orderData$deliveryAd.street}, ${(_orderData$deliveryAd2 = orderData.deliveryAddress) === null || _orderData$deliveryAd2 === void 0 ? void 0 : _orderData$deliveryAd2.city}, ${(_orderData$deliveryAd3 = orderData.deliveryAddress) === null || _orderData$deliveryAd3 === void 0 ? void 0 : _orderData$deliveryAd3.state} - ${(_orderData$deliveryAd4 = orderData.deliveryAddress) === null || _orderData$deliveryAd4 === void 0 ? void 0 : _orderData$deliveryAd4.pincode}` : 'Alkasa Society, Mohammadwadi, Pune - 411060',\n        items_list: orderData.items.map(item => {\n          const quantityAlert = item.category === 'food' && item.quantity > 5 || item.category === 'crochet' && item.quantity > 3 ? ' ‚ö†Ô∏è Large quantity - delivery time may vary, owner will inform soon' : '';\n          return `${item.name} (${item.selectedWeight ? `${item.selectedWeight}` : `Qty: ${item.quantity}`}) - ‚Çπ${item.finalPrice || item.price * item.quantity}${quantityAlert}`;\n        }).join('\\n'),\n        estimated_delivery: new Date(orderData.estimatedDelivery).toLocaleDateString('en-IN'),\n        contact_phone: '+91 9970944685',\n        contact_email: 'shreyathakurinda@gmail.com'\n      };\n      console.log('üìß Sending email to:', customerData.email);\n      console.log('üìß Template params:', templateParams);\n      const result = await emailjs.send(EMAILJS_CONFIG.serviceId, EMAILJS_CONFIG.templateId, templateParams, EMAILJS_CONFIG.publicKey);\n      console.log('‚úÖ Order confirmation email sent:', result);\n      return {\n        success: true,\n        messageId: result.text\n      };\n    } catch (error) {\n      console.error('‚ùå EmailJS error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n};\nexport default emailService;","map":{"version":3,"names":["emailjs","EMAILJS_CONFIG","serviceId","templateId","publicKey","emailService","sendOrderConfirmation","orderData","customerData","_orderData$deliveryAd","_orderData$deliveryAd2","_orderData$deliveryAd3","_orderData$deliveryAd4","templateParams","to_email","email","from_name","from_email","customer_name","name","order_id","orderId","total_amount","total","payment_method","paymentMethod","delivery_option","deliveryOption","delivery_address","deliveryAddress","street","city","state","pincode","items_list","items","map","item","quantityAlert","category","quantity","selectedWeight","finalPrice","price","join","estimated_delivery","Date","estimatedDelivery","toLocaleDateString","contact_phone","contact_email","console","log","result","send","success","messageId","text","error","message"],"sources":["D:/project1/stitch_and_savour/frontend/src/services/emailService.js"],"sourcesContent":["import emailjs from '@emailjs/browser';\n\n// EmailJS configuration - UPDATE WITH YOUR ACTUAL TEMPLATE ID\nconst EMAILJS_CONFIG = {\n  serviceId: 'service_stitch_savour',\n  templateId: 'template_order_confirmat',\n  publicKey: 'keGAumAlGmoQXtY1v'\n};\n\nconst emailService = {\n  // Send order confirmation email\n  sendOrderConfirmation: async (orderData, customerData) => {\n    try {\n      const templateParams = {\n        to_email: customerData.email,\n        from_name: 'Stitch & Savour',\n        from_email: 'shreyathakurinda@gmail.com',\n        customer_name: customerData.name,\n        order_id: orderData.orderId,\n        total_amount: orderData.total,\n        payment_method: orderData.paymentMethod === 'qr' ? 'Online Payment' : 'Cash on Delivery',\n        delivery_option: orderData.deliveryOption === 'home' ? 'Home Delivery' : 'Self Pickup',\n        delivery_address: orderData.deliveryOption === 'home' \n          ? `${orderData.deliveryAddress?.street}, ${orderData.deliveryAddress?.city}, ${orderData.deliveryAddress?.state} - ${orderData.deliveryAddress?.pincode}`\n          : 'Alkasa Society, Mohammadwadi, Pune - 411060',\n        items_list: orderData.items.map(item => {\n          const quantityAlert = ((item.category === 'food' && item.quantity > 5) || (item.category === 'crochet' && item.quantity > 3)) \n            ? ' ‚ö†Ô∏è Large quantity - delivery time may vary, owner will inform soon' \n            : '';\n          return `${item.name} (${item.selectedWeight ? `${item.selectedWeight}` : `Qty: ${item.quantity}`}) - ‚Çπ${item.finalPrice || (item.price * item.quantity)}${quantityAlert}`;\n        }).join('\\n'),\n        estimated_delivery: new Date(orderData.estimatedDelivery).toLocaleDateString('en-IN'),\n        contact_phone: '+91 9970944685',\n        contact_email: 'shreyathakurinda@gmail.com'\n      };\n\n      console.log('üìß Sending email to:', customerData.email);\n      console.log('üìß Template params:', templateParams);\n\n      const result = await emailjs.send(\n        EMAILJS_CONFIG.serviceId,\n        EMAILJS_CONFIG.templateId,\n        templateParams,\n        EMAILJS_CONFIG.publicKey\n      );\n\n      console.log('‚úÖ Order confirmation email sent:', result);\n      return { success: true, messageId: result.text };\n    } catch (error) {\n      console.error('‚ùå EmailJS error:', error);\n      return { success: false, error: error.message };\n    }\n  }\n};\n\nexport default emailService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}