{"ast":null,"code":"import axios from'axios';import{config}from'../config/config';const API_URL=config.API_URL;const api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});export const contactService={// Submit contact message - database only\nsubmitMessage:async messageData=>{try{const response=await api.post('/contact/submit',messageData);console.log('ðŸ“§ Contact message saved to database:',response.data.message._id);return response.data;}catch(error){console.error('Failed to save contact message:',error.message);throw error;}},// Get user's contact messages\ngetUserMessages:async()=>{try{const response=await api.get('/contact/user');return response.data.messages;}catch(error){console.error('Failed to load contact messages:',error.message);return[];}}};export default contactService;","map":{"version":3,"names":["axios","config","API_URL","api","create","baseURL","headers","contactService","submitMessage","messageData","response","post","console","log","data","message","_id","error","getUserMessages","get","messages"],"sources":["D:/project1/stitch_and_savour/frontend/src/services/contactService.js"],"sourcesContent":["import axios from 'axios';\n\nimport { config } from '../config/config';\n\nconst API_URL = config.API_URL;\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const contactService = {\n  // Submit contact message - database only\n  submitMessage: async (messageData) => {\n    try {\n      const response = await api.post('/contact/submit', messageData);\n      console.log('ðŸ“§ Contact message saved to database:', response.data.message._id);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to save contact message:', error.message);\n      throw error;\n    }\n  },\n\n  // Get user's contact messages\n  getUserMessages: async () => {\n    try {\n      const response = await api.get('/contact/user');\n      return response.data.messages;\n    } catch (error) {\n      console.error('Failed to load contact messages:', error.message);\n      return [];\n    }\n  }\n};\n\nexport default contactService;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,MAAM,KAAQ,kBAAkB,CAEzC,KAAM,CAAAC,OAAO,CAAGD,MAAM,CAACC,OAAO,CAE9B,KAAM,CAAAC,GAAG,CAAGH,KAAK,CAACI,MAAM,CAAC,CACvBC,OAAO,CAAEH,OAAO,CAChBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,cAAc,CAAG,CAC5B;AACAC,aAAa,CAAE,KAAO,CAAAC,WAAW,EAAK,CACpC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,IAAI,CAAC,iBAAiB,CAAEF,WAAW,CAAC,CAC/DG,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAEH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,CAC/E,MAAO,CAAAN,QAAQ,CAACI,IAAI,CACtB,CAAE,MAAOG,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAACF,OAAO,CAAC,CAC/D,KAAM,CAAAE,KAAK,CACb,CACF,CAAC,CAED;AACAC,eAAe,CAAE,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACgB,GAAG,CAAC,eAAe,CAAC,CAC/C,MAAO,CAAAT,QAAQ,CAACI,IAAI,CAACM,QAAQ,CAC/B,CAAE,MAAOH,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAACF,OAAO,CAAC,CAChE,MAAO,EAAE,CACX,CACF,CACF,CAAC,CAED,cAAe,CAAAR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}