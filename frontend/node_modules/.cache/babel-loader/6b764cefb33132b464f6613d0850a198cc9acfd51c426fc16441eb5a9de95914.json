{"ast":null,"code":"var _jsxFileName = \"d:\\\\project1\\\\stitch_and_savour\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport cartService from '../services/cartService';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('stitch_savour_cart');\n    if (savedCart) {\n      try {\n        setCartItems(JSON.parse(savedCart));\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage and sync to backend whenever it changes\n  useEffect(() => {\n    localStorage.setItem('stitch_savour_cart', JSON.stringify(cartItems));\n    if (user && cartItems.length > 0) {\n      cartService.syncCart(cartItems);\n    }\n  }, [cartItems, user]);\n  const addToCart = (product, quantity = 1, customizations = {}, selectedWeight = '') => {\n    // Calculate final price including customizations and weight\n    let finalPrice = product.price;\n\n    // For food items, calculate price based on weight\n    if (product.category === 'food' && selectedWeight) {\n      if (product.name === 'Homemade Gujiya') {\n        // Special pricing for Gujiya\n        if (selectedWeight === '6 pieces') finalPrice = 150;else if (selectedWeight === '12 pieces') finalPrice = 300;else if (selectedWeight === '24 pieces') finalPrice = 600;\n      } else if (product.pricePerKg) {\n        // Handle weight-based pricing for other food items\n        let weightValue;\n        if (selectedWeight.includes('kg')) {\n          weightValue = parseFloat(selectedWeight.replace(/[^0-9.]/g, ''));\n        } else {\n          weightValue = parseFloat(selectedWeight.replace(/[^0-9.]/g, '')) / 1000; // Convert g to kg\n        }\n        finalPrice = Math.round(product.pricePerKg * weightValue);\n      }\n    }\n\n    // Add customization modifiers\n    if (product.customization) {\n      product.customization.forEach(option => {\n        const selectedValue = customizations[option.type];\n        if (selectedValue && option.priceModifier && typeof option.priceModifier === 'object') {\n          finalPrice += option.priceModifier[selectedValue] || 0;\n        }\n      });\n    }\n    setCartItems(prevItems => {\n      const existingItemIndex = prevItems.findIndex(item => (item.id === product.id || item._id === product._id) && JSON.stringify(item.customizations) === JSON.stringify(customizations) && item.selectedWeight === selectedWeight);\n      if (existingItemIndex > -1) {\n        // Update existing item\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += quantity;\n        return updatedItems;\n      } else {\n        // Add new item\n        return [...prevItems, {\n          ...product,\n          id: product.id || product._id,\n          quantity,\n          customizations,\n          selectedWeight,\n          finalPrice,\n          cartId: `${product.id || product._id}_${Date.now()}_${Math.random()}`\n        }];\n      }\n    });\n    return true;\n  };\n  const removeFromCart = cartId => {\n    setCartItems(prevItems => prevItems.filter(item => item.cartId !== cartId));\n  };\n  const updateQuantity = (cartId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(cartId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.cartId === cartId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n  const clearCart = async () => {\n    setCartItems([]);\n    localStorage.removeItem('stitch_savour_cart');\n    if (user) {\n      await cartService.clearCart();\n    }\n  };\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => {\n      const itemPrice = item.finalPrice || item.price;\n      return total + itemPrice * item.quantity;\n    }, 0);\n  };\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  const getDeliveryTime = () => {\n    if (cartItems.length === 0) return 0;\n    return Math.max(...cartItems.map(item => item.deliveryTime || 2));\n  };\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getTotalItems,\n    getDeliveryTime\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"CIPlk2y4y6PrvydEeCI8hFA52uc=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","cartService","useAuth","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cartItems","setCartItems","navigate","user","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","length","syncCart","addToCart","product","quantity","customizations","selectedWeight","finalPrice","price","category","name","pricePerKg","weightValue","includes","parseFloat","replace","Math","round","customization","forEach","option","selectedValue","type","priceModifier","prevItems","existingItemIndex","findIndex","item","id","_id","updatedItems","cartId","Date","now","random","removeFromCart","filter","updateQuantity","newQuantity","map","clearCart","removeItem","getCartTotal","reduce","total","itemPrice","getTotalItems","getDeliveryTime","max","deliveryTime","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["d:/project1/stitch_and_savour/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport cartService from '../services/cartService';\nimport { useAuth } from './AuthContext';\n\nconst CartContext = createContext();\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('stitch_savour_cart');\n    if (savedCart) {\n      try {\n        setCartItems(JSON.parse(savedCart));\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage and sync to backend whenever it changes\n  useEffect(() => {\n    localStorage.setItem('stitch_savour_cart', JSON.stringify(cartItems));\n    if (user && cartItems.length > 0) {\n      cartService.syncCart(cartItems);\n    }\n  }, [cartItems, user]);\n\n  const addToCart = (product, quantity = 1, customizations = {}, selectedWeight = '') => {\n    // Calculate final price including customizations and weight\n    let finalPrice = product.price;\n    \n    // For food items, calculate price based on weight\n    if (product.category === 'food' && selectedWeight) {\n      if (product.name === 'Homemade Gujiya') {\n        // Special pricing for Gujiya\n        if (selectedWeight === '6 pieces') finalPrice = 150;\n        else if (selectedWeight === '12 pieces') finalPrice = 300;\n        else if (selectedWeight === '24 pieces') finalPrice = 600;\n      } else if (product.pricePerKg) {\n        // Handle weight-based pricing for other food items\n        let weightValue;\n        if (selectedWeight.includes('kg')) {\n          weightValue = parseFloat(selectedWeight.replace(/[^0-9.]/g, ''));\n        } else {\n          weightValue = parseFloat(selectedWeight.replace(/[^0-9.]/g, '')) / 1000; // Convert g to kg\n        }\n        finalPrice = Math.round(product.pricePerKg * weightValue);\n      }\n    }\n    \n    // Add customization modifiers\n    if (product.customization) {\n      product.customization.forEach(option => {\n        const selectedValue = customizations[option.type];\n        if (selectedValue && option.priceModifier && typeof option.priceModifier === 'object') {\n          finalPrice += option.priceModifier[selectedValue] || 0;\n        }\n      });\n    }\n\n    setCartItems(prevItems => {\n      const existingItemIndex = prevItems.findIndex(\n        item => (item.id === product.id || item._id === product._id) && \n        JSON.stringify(item.customizations) === JSON.stringify(customizations) &&\n        item.selectedWeight === selectedWeight\n      );\n\n      if (existingItemIndex > -1) {\n        // Update existing item\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex].quantity += quantity;\n        return updatedItems;\n      } else {\n        // Add new item\n        return [...prevItems, {\n          ...product,\n          id: product.id || product._id,\n          quantity,\n          customizations,\n          selectedWeight,\n          finalPrice,\n          cartId: `${product.id || product._id}_${Date.now()}_${Math.random()}`\n        }];\n      }\n    });\n    return true;\n  };\n\n  const removeFromCart = (cartId) => {\n    setCartItems(prevItems => prevItems.filter(item => item.cartId !== cartId));\n  };\n\n  const updateQuantity = (cartId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(cartId);\n      return;\n    }\n\n    setCartItems(prevItems =>\n      prevItems.map(item =>\n        item.cartId === cartId ? { ...item, quantity: newQuantity } : item\n      )\n    );\n  };\n\n  const clearCart = async () => {\n    setCartItems([]);\n    localStorage.removeItem('stitch_savour_cart');\n    if (user) {\n      await cartService.clearCart();\n    }\n  };\n\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => {\n      const itemPrice = item.finalPrice || item.price;\n      return total + (itemPrice * item.quantity);\n    }, 0);\n  };\n\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const getDeliveryTime = () => {\n    if (cartItems.length === 0) return 0;\n    return Math.max(...cartItems.map(item => item.deliveryTime || 2));\n  };\n\n  const value = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getTotalItems,\n    getDeliveryTime\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}