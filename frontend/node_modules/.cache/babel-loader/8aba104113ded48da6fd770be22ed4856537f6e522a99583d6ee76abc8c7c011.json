{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../config/config';\nconst API_URL = config.API_URL;\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  // Register new user\n  register: async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n    }\n  },\n  // Login user\n  login: async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Login failed');\n    }\n  },\n  // Get current user\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to get user data');\n    }\n  },\n  // Update user profile\n  updateProfile: async userData => {\n    try {\n      const response = await api.put('/auth/profile', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Profile update failed');\n    }\n  },\n  // Change password\n  changePassword: async passwordData => {\n    try {\n      const response = await api.put('/auth/change-password', passwordData);\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Password change failed');\n    }\n  },\n  // Logout\n  logout: async () => {\n    try {\n      await api.post('/auth/logout');\n      localStorage.removeItem('token');\n    } catch (error) {\n      // Even if logout fails on server, remove token locally\n      localStorage.removeItem('token');\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","config","API_URL","api","create","baseURL","headers","interceptors","request","use","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","register","userData","post","data","_error$response2","_error$response2$data","Error","message","login","credentials","_error$response3","_error$response3$data","getCurrentUser","get","_error$response4","_error$response4$data","updateProfile","put","_error$response5","_error$response5$data","changePassword","passwordData","_error$response6","_error$response6$data","logout"],"sources":["d:/project1/stitch_and_savour/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\nimport { config } from '../config/config';\n\nconst API_URL = config.API_URL;\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle token expiration\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authService = {\n  // Register new user\n  register: async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Registration failed');\n    }\n  },\n\n  // Login user\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Login failed');\n    }\n  },\n\n  // Get current user\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to get user data');\n    }\n  },\n\n  // Update user profile\n  updateProfile: async (userData) => {\n    try {\n      const response = await api.put('/auth/profile', userData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Profile update failed');\n    }\n  },\n\n  // Change password\n  changePassword: async (passwordData) => {\n    try {\n      const response = await api.put('/auth/change-password', passwordData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Password change failed');\n    }\n  },\n\n  // Logout\n  logout: async () => {\n    try {\n      await api.post('/auth/logout');\n      localStorage.removeItem('token');\n    } catch (error) {\n      // Even if logout fails on server, remove token locally\n      localStorage.removeItem('token');\n    }\n  }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}