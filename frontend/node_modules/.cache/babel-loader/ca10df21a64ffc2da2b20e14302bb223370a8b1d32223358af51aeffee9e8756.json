{"ast":null,"code":"import axios from'axios';import{config}from'../config/config';const API_URL=config.API_URL;// Create axios instance\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>Promise.reject(error));export const reviewService={// Create review - DATABASE FIRST approach\ncreateReview:async reviewData=>{try{// Always try database first\nconst response=await api.post('/reviews',{productId:reviewData.productId,productName:reviewData.productName||reviewData.productId,rating:reviewData.rating,comment:reviewData.review||reviewData.comment,customerName:reviewData.customerName,customerEmail:reviewData.customerEmail,orderNumber:reviewData.orderNumber});console.log('⭐ Review saved to database:',response.data.review._id);return response.data;}catch(error){console.error('Failed to save review to database:',error.message);throw error;}},// Get reviews for a product - DATABASE FIRST approach\ngetProductReviews:async productId=>{try{const response=await api.get(\"/reviews/product/\".concat(encodeURIComponent(productId)));console.log('⭐ Product reviews from database:',response.data.reviews.length);return response.data.reviews;}catch(error){console.error('Failed to load product reviews:',error.message);return[];}},// Get all reviews - DATABASE FIRST approach\ngetAllReviews:async()=>{try{const response=await api.get('/reviews/all');console.log('⭐ All reviews from database:',response.data.reviews.length);return response.data.reviews;}catch(error){console.error('Failed to load all reviews:',error.message);return[];}}};export default reviewService;","map":{"version":3,"names":["axios","config","API_URL","api","create","baseURL","headers","interceptors","request","use","token","localStorage","getItem","Authorization","concat","error","Promise","reject","reviewService","createReview","reviewData","response","post","productId","productName","rating","comment","review","customerName","customerEmail","orderNumber","console","log","data","_id","message","getProductReviews","get","encodeURIComponent","reviews","length","getAllReviews"],"sources":["D:/project1/stitch_and_savour/frontend/src/services/reviewService.js"],"sourcesContent":["import axios from 'axios';\n\nimport { config } from '../config/config';\n\nconst API_URL = config.API_URL;\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport const reviewService = {\n  // Create review - DATABASE FIRST approach\n  createReview: async (reviewData) => {\n    try {\n      // Always try database first\n      const response = await api.post('/reviews', {\n        productId: reviewData.productId,\n        productName: reviewData.productName || reviewData.productId,\n        rating: reviewData.rating,\n        comment: reviewData.review || reviewData.comment,\n        customerName: reviewData.customerName,\n        customerEmail: reviewData.customerEmail,\n        orderNumber: reviewData.orderNumber\n      });\n      \n      console.log('⭐ Review saved to database:', response.data.review._id);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to save review to database:', error.message);\n      throw error;\n    }\n  },\n\n  // Get reviews for a product - DATABASE FIRST approach\n  getProductReviews: async (productId) => {\n    try {\n      const response = await api.get(`/reviews/product/${encodeURIComponent(productId)}`);\n      console.log('⭐ Product reviews from database:', response.data.reviews.length);\n      return response.data.reviews;\n    } catch (error) {\n      console.error('Failed to load product reviews:', error.message);\n      return [];\n    }\n  },\n\n  // Get all reviews - DATABASE FIRST approach\n  getAllReviews: async () => {\n    try {\n      const response = await api.get('/reviews/all');\n      console.log('⭐ All reviews from database:', response.data.reviews.length);\n      return response.data.reviews;\n    } catch (error) {\n      console.error('Failed to load all reviews:', error.message);\n      return [];\n    }\n  }\n};\n\nexport default reviewService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}